<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Semaphore on EK Dev Blog</title>
    <link>https://loveAlakazam.github.io/blog/tags/semaphore/</link>
    <description>Recent content in Semaphore on EK Dev Blog</description>
    <generator>Hugo -- 0.125.7</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://loveAlakazam.github.io/blog/tags/semaphore/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>동시성 제어 (Concurrency Methods)</title>
      <link>https://loveAlakazam.github.io/blog/docs/concurrency-methods/</link>
      <pubDate>Mon, 24 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://loveAlakazam.github.io/blog/docs/concurrency-methods/</guid>
      <description>동시성제어(concurrency control) 다중 사용자 환경을 지원하는 데이터베이스시스템에서 여러 트랜잭션들이 성공적으로 동시에 실행될 수 있도록 지원하는 기술을 의미합니다. 트랜잭션간의 간섭으로 문제가 발생하지 않도록 트랜잭션의 실행순서를 제어하는 기법입니다. 동시성제어는 실생활에 사용되고 있는 소프트웨어 서비스에서도 많이 활용되고 있습니다.
금융서비스에서 금액 송금/저금 쇼핑몰서비스에서 주문처리/재고감소/결제요청 동시 접속자수가 많은 실시간 앱에서 채팅/댓글/좋아요 수 증가 포인트나, 캐시백을 적립/사용 이벤트 응모와 선착순쿠폰 발급 동시성제어를 하지 않으면 어떤 문제가 발생할까? 문제점 설명 갱신내용 손실(lost update) 트랜잭션들이 동일한 데이터를 동시에 갱신하는 경우에 발생합니다.</description>
    </item>
  </channel>
</rss>
